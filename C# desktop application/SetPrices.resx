<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAQSSURBVGhD7ZhdqFVFFMcHwVCLMqQvsSIzQ+yD8FkQH6Vee4iCXvJBCLmg3auePWdAEHqpEIwK
        P3sMBBMfgiCoF+ty8cGPQBS8XhCUoAfvuXfPbIPdWjNrnzuz9+y9Z7bncf/gz72s/6x1zt5nvllPT09P
        T08QIl/PePYJG6pzjKtZ+P8+/P3XSP//F+gsS9THbDp/hgm5hSXZPmh/BuJ3ov2JkajtUPhHUArKA5Xq
        Bx2obbrGoXwDxKZBC538Toj8KXizx6HYf1S0ix5BjW/YVL5W18S/Q/WliXfwgxnINyH5byrSJAFdYTN8
        6CmPZ2uWHV56iarDr5rtgFjxtuP9RpLsXXjqB1Zyg+TnOodnX/l9RwtMqLd0e0Skr0DsZmffCw4sMyCL
        pBZFPQAKvsToRZ2DHB69ALH5zr6DyNdBg2tW4yZdhIfdo3N07tJGGOxfQPxhqZ1PlyFvjc5DhHoHYvYE
        cYUdyJ8kt90fE/oW8YvWMZBvQBu77/o1VEcpw5ComcfyadAWI79JFymjnuTRTk9eWSNnUO7NV0PM7iop
        O7L8MrntfsAsYiTS3ZRhGGZfQ/xPdiR9lSIGjPnyHclvqbWBy6luvsifhsCSa9YI14YCnD7HnjxJUQP+
        xHaeXyOnHvZrt68H+on6yAo2SVIpg9tV5ihq4NlnllevRH1IGQaufon38e3ZwSbZK6JZ/kfkpbB+/DoW
        V1cp3iL5HVUzcLk/3tcbMzvYIJHuolIGLj+AePEQXXSZKhmqE0CAz+U/pWCTLlCpFQbydYhfKrULFKz4
        NmYajvS5Um6wRZU5mBDyffDb1wBXKWUb9AbS8d1x5/W5ykrBdiXqZ73tKIPLPFfXK+3rFfAFLfwPENWF
        bGVsKE9A0fVU3iDkVu35c0oqdRG9F4v1YwaxX3eZWN5EH2FI1HlPO58mMojDplGcHofy+7G4WrT8n+gj
        DJVVs06TmEZDF7Ik20tlDO7O9QZFDUn2qeXVayILWehWojz7uL/cJYoauDxoeXWa0FYCCdvMXTGNCXNi
        wjcyB2/8PYoasEv5a1iSP1BrQ3WzFuGHbqfxENOGebDlSq4rpRfAAjzgcHWvs68JOtDAtJWotymjykz+
        LLRr30rjzYNN9cAS52twoxY2peJ4OQbdZge8mVU6d5C+Bj8pzhD2W6pT6UgJZwzn6ib7TR9gCtp8B7PD
        vL3SuEW4N0Hc24Mm3dKfUTDRQ30BXl3g4rSSVK+4B5iHrrBdt0eq1yZxfiNi8XnoEn9YyX4laqDXh9ar
        GPk7vPnnqDquE6WLq0g/CJE/ob+gu+LGCuft4bjPVq8O4/xO4O2BWbTsRaRN2Pb0+LDvu7yN8SeC/3od
        ZweQ53odb5ZxRTYbu+r1eZvf09PT09PTCmP/A4FVCeDmlCUtAAAAAElFTkSuQmCC
</value>
  </data>
</root>